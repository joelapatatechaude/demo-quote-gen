kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
annotations:
    template.alpha.openshift.io/wait-for-ready: "true"
name: postgresql
spec:
replicas: 1
selector:
    name: postgresql
strategy:
    type: Recreate
template:
    metadata:
    labels:
        name: postgresql
    spec:
    containers:
    - capabilities: {}
        env:
        - name: POSTGRESQL_USER
        valueFrom:
            secretKeyRef:
            key: database-user
            name: postgresql
        - name: POSTGRESQL_PASSWORD
        valueFrom:
            secretKeyRef:
            key: database-password
            name: postgresql
        - name: POSTGRESQL_DATABASE
        valueFrom:
            secretKeyRef:
            key: database-name
            name: postgresql
        image: ' '
        imagePullPolicy: IfNotPresent
        livenessProbe:
        exec:
            command:
            - /usr/libexec/check-container
            - --live
        initialDelaySeconds: 120
        timeoutSeconds: 10
        name: postgresql
        ports:
        - containerPort: 5432
        protocol: TCP
        readinessProbe:
        exec:
            command:
            - /usr/libexec/check-container
        initialDelaySeconds: 5
        timeoutSeconds: 1
        resources:
        limits:
            memory: 512Mi
        securityContext:
        capabilities: {}
        privileged: false
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
        name: postgresql-data
    dnsPolicy: ClusterFirst
    restartPolicy: Always
    volumes:
    - emptyDir:
        medium: ""
        name: postgresql-data
triggers:
- imageChangeParams:
    automatic: true
    containerNames:
    - postgresql
    from:
        kind: ImageStreamTag
        name: postgresql:9.6
        namespace: openshift
    type: ImageChange
- type: ConfigChange