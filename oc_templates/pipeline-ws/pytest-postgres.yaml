---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: pytest-postgres
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/tags: python, pytest, postgres
    tekton.dev/displayName: pytest-postgres
spec:
  description: >-
    This task will run pytest on the provided input.
  params:
    - name: pythonImage
      description: python image to use to run pytest
      type: string
      default: registry.redhat.io/rhel8/python-38
    - name: ARGS
      description: The additional arguments to be used with pytest
      type: string
      default: ""
    - name: SOURCE_PATH
      description: The path to the source code
      default: "."
    - name: REQUIREMENTS_FILE
      description: The name of the requirements file inside the source location
      default: "requirements.txt"
    - name: gitUrl
      type: string
      description: The git url
      default: $(resources.inputs.source.url)
    - name: POSTGRES_USER
      description: Username for postgres user
      default: postgres
    - name: POSTGRES_PASSWORD
      description: Password for postgres password
      default: postgres
    - name: POSTGRES_DB
      description: Password for postgres database
      default: quotes       
  resources:
    inputs:
      - name: source
        type: git
  sidecars:
    - name: postgres
      image: postgres
      env:
        - value: $(params.POSTGRES_USER)
          name: POSTGRES_USER
        - value: $(params.POSTGRES_PASSWORD)
          name: POSTGRES_PASSWORD
        - value: $(params.POSTGRES_DB)
          name: POSTGRES_DB
      volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: pg-storage             
  steps:
    - name: unit-test
      image: $(params.pythonImage)
      script: |
        export PATH=$PATH:$HOME/.local/bin
        export QUOTE_BACKEND="DB"

        if [ -e "$(inputs.params.SOURCE_PATH)/$(inputs.params.REQUIREMENTS_FILE)" ];then
          pip install -r $(inputs.params.SOURCE_PATH)/$(inputs.params.REQUIREMENTS_FILE)
        fi

        pip install pytest

        cd $(inputs.params.SOURCE_PATH)/

        python -m pytest $(inputs.params.ARGS)
      workingDir: $(workspaces.storage.path)
      env:
        - value: $(params.POSTGRES_USER)
          name: POSTGRES_USER
        - value: $(params.POSTGRES_PASSWORD)
          name: POSTGRES_PASSWORD
        - value: $(params.POSTGRES_DB)
          name: POSTGRES_DB  
  workspaces:
    - description: Expect git repo to be here
      name: source
  volumes:
    - emptyDir: {}
      name: pg-storage    
