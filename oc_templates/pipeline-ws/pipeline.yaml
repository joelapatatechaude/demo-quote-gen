apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  generation: 1
  labels:
    pipeline.openshift.io/runtime: python
    pipeline.openshift.io/type: openshift
  name: quotegen
spec:
  params:
    - default: quotegen
      description: name of DeploymentConfig
      name: DC_NAME
      type: string
  resources:
    - name: app-source
      type: git
    - name: app-image
      type: image
  tasks:
    - name: pytest
      params:
        - name: pythonImage
          value: registry.redhat.io/rhel8/python-38
        - name: ARGS
          value: '-s -v'
        - name: SOURCE_PATH
          value: quotegen
        - name: REQUIREMENTS_FILE
          value: requirements.txt
      resources:
        inputs:
          - name: source
            resource: app-source
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: pytest
    - name: build
      params:
        - name: BUILDER_IMAGE
          value: registry.redhat.io/rhel8/buildah
        - name: DOCKERFILE
          value: ./Dockerfile
        - name: CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'false'
        - name: FORMAT
          value: oci
        - name: IMAGE
          value: $(resources.outputs.image.url) 
      resources:
        inputs:
          - name: source
            resource: app-source
        outputs:
          - name: image
            resource: app-image
      runAfter:
        - pytest
      taskRef:
        kind: ClusterTask
        name: buildah
    - name: deploy
      params:
        - name: ARGS
          value:
            - rollout
            - status
            - dc/$(params.DC_NAME)
      runAfter:
        - build
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: git-clone
      params:
        - name: url
          value: 'https://github.com/snowjet/demo-quote-gen.git'
        - name: revision
          value: master
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: deleteExisting
          value: 'false'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
  workspaces:
    - name: workspace
